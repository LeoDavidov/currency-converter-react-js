{"version":3,"sources":["components/CurrencyDropdown.js","App.js","index.js"],"names":["CurrencyDropdown","props","pairs","exchangeData","exchangeRates","forEach","code","rate","sortedCurrencies","map","sort","value","state","currency","this","onChange","e","onSelectChange","target","className","React","Component","App","moneyQuantity","rateFrom","rateTo","error","onCurrencyChangeFrom","setState","onCurrencyChangeTo","isNaN","Number","slice","result","toFixed","Infinity","Math","abs","onInputChange","type","calcResult","disabled","ReactDom","render","document","getElementById"],"mappings":"yNAiDeA,E,kDA7CX,WAAYC,GAAQ,IAAD,sBACf,cAAMA,GAGN,IAAMC,EAAQ,GACdC,EAAaC,cAAcC,SACvB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OAAqBL,EAAMI,GAAQC,KAIvC,IAAMC,EAAmBL,EAAaC,cACjCK,KAAI,qBAAGH,QACPI,OACAD,KAAI,SAACH,GACF,OACI,wBAAmBK,MAAOL,EAA1B,SACKA,GADQA,MAfV,OAqBf,EAAKM,MAAQ,CACTJ,iBAAkBA,EAClBN,MAAOA,GAvBI,E,kDA2BnB,SAAeW,GACX,IAAMN,EAAOO,KAAKF,MAAMV,MAAMW,GAC9BC,KAAKb,MAAMc,SAASR,K,oBAGxB,WAAU,IAAD,OACL,OACI,yBACIQ,SAAU,SAACC,GAAD,OAAO,EAAKC,eAAeD,EAAEE,OAAOP,QAC9CQ,UAAU,WAFd,UAII,yCACCL,KAAKF,MAAMJ,wB,GAxCGY,IAAMC,WCwEtBC,E,4MAtEXV,MAAQ,CAAEW,cAAe,GAAIC,SAAU,KAAMC,OAAQ,KAAMC,MAAO,I,EAElEC,qBAAuB,SAACpB,GACpB,EAAKqB,SAAS,CAAEJ,SAAUjB,K,EAG9BsB,mBAAqB,SAACtB,GAClB,EAAKqB,SAAS,CAAEH,OAAQlB,K,mDAG5B,SAAcI,GACNmB,MAAMC,OAAOpB,IACbG,KAAKc,SAAS,CACVF,MAAO,0BAENf,EAAQ,EACbG,KAAKc,SAAS,CACVF,MAAO,0BAEVZ,KAAKc,SAAS,CAAEF,MAAO,KAC5BZ,KAAKc,SAAS,CACVL,cAAeZ,EAAMqB,MAAM,EAAG,O,wBAItC,WACI,IAAMC,GACDnB,KAAKF,MAAMW,cAAgBT,KAAKF,MAAMY,SACvCV,KAAKF,MAAMa,QACbS,QAAQ,GACV,OACIJ,MAAMG,IACNA,KAAYE,KACD,aAAXF,GACAA,GAAUG,KAAKC,IAAIJ,GAEZ,GACJA,I,oBAGX,WAAU,IAAD,OACL,OACI,sBAAKd,UAAU,MAAf,UACI,oDACA,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAf,kBACA,cAAC,EAAD,CACIJ,SAAUD,KAAKa,uBAEnB,uBACIZ,SAAU,YAAiB,IAAdG,EAAa,EAAbA,OACT,EAAKoB,cAAcpB,EAAOP,QAE9BA,MAAOG,KAAKF,MAAMW,cAClBgB,KAAK,SAET,mBAAGpB,UAAU,QAAb,SAAsBL,KAAKF,MAAMc,WAErC,sBAAKP,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAf,gBACA,cAAC,EAAD,CAAkBJ,SAAUD,KAAKe,qBACjC,uBAAOlB,MAAOG,KAAK0B,aAAcD,KAAK,OAAOE,UAAQ,iB,GA/D3DrB,IAAMC,WCDxBqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.354406c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport exchangeData from '../data/exchangeData.json';\r\n\r\nclass CurrencyDropdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // for state.pairs\r\n        const pairs = {};\r\n        exchangeData.exchangeRates.forEach(\r\n            ({ code, rate }) => (pairs[code] = rate)\r\n        );\r\n\r\n        // for state.sortedCurrencies\r\n        const sortedCurrencies = exchangeData.exchangeRates\r\n            .map(({ code }) => code)\r\n            .sort()\r\n            .map((code) => {\r\n                return (\r\n                    <option key={code} value={code}>\r\n                        {code}\r\n                    </option>\r\n                );\r\n            });\r\n\r\n        this.state = {\r\n            sortedCurrencies: sortedCurrencies,\r\n            pairs: pairs,\r\n        };\r\n    }\r\n\r\n    onSelectChange(currency) {\r\n        const rate = this.state.pairs[currency];\r\n        this.props.onChange(rate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select\r\n                onChange={(e) => this.onSelectChange(e.target.value)}\r\n                className=\"currency\"\r\n            >\r\n                <option>---</option>\r\n                {this.state.sortedCurrencies}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrencyDropdown;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport CurrencyDropdown from './components/CurrencyDropdown';\r\n\r\nclass App extends React.Component {\r\n    state = { moneyQuantity: '', rateFrom: null, rateTo: null, error: '' };\r\n\r\n    onCurrencyChangeFrom = (rate) => {\r\n        this.setState({ rateFrom: rate });\r\n    };\r\n\r\n    onCurrencyChangeTo = (rate) => {\r\n        this.setState({ rateTo: rate });\r\n    };\r\n\r\n    onInputChange(value) {\r\n        if (isNaN(Number(value)))\r\n            this.setState({\r\n                error: 'â›” enter a number',\r\n            });\r\n        else if (value < 0)\r\n            this.setState({\r\n                error: 'only positive numbers',\r\n            });\r\n        else this.setState({ error: '' });\r\n        this.setState({\r\n            moneyQuantity: value.slice(0, 6),\r\n        });\r\n    }\r\n\r\n    calcResult() {\r\n        const result = (\r\n            (this.state.moneyQuantity * this.state.rateFrom) /\r\n            this.state.rateTo\r\n        ).toFixed(2);\r\n        if (\r\n            isNaN(result) ||\r\n            result === -Infinity ||\r\n            result === 'Infinity' ||\r\n            result != Math.abs(result)\r\n        )\r\n            return '';\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <h1>Currency Converter</h1>\r\n                <div className=\"input-box\">\r\n                    <div className=\"box-left\">\r\n                        <div className=\"text\">from</div>\r\n                        <CurrencyDropdown\r\n                            onChange={this.onCurrencyChangeFrom}\r\n                        />\r\n                        <input\r\n                            onChange={({ target }) => {\r\n                                this.onInputChange(target.value);\r\n                            }}\r\n                            value={this.state.moneyQuantity}\r\n                            type=\"text\"\r\n                        />\r\n                        <p className=\"error\">{this.state.error}</p>\r\n                    </div>\r\n                    <div className=\"box-right\">\r\n                        <div className=\"text\">to</div>\r\n                        <CurrencyDropdown onChange={this.onCurrencyChangeTo} />\r\n                        <input value={this.calcResult()} type=\"text\" disabled />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}