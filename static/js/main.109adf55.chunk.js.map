{"version":3,"sources":["components/CurrencyDropdown.js","App.js","index.js"],"names":["CurrencyDropdown","onChange","onSelectChange","currency","rate","pairs","exchangeData","exchangeRates","forEach","code","sortedCurrencies","map","sort","value","className","e","target","App","useState","moneyQuantity","setMoneyQuantity","rateFrom","setRateFrom","rateTo","setRateTo","errorText","setErrorText","isNaN","Number","slice","type","result","Infinity","Math","abs","toFixed","calcResult","disabled","ReactDom","render","document","getElementById"],"mappings":"2LAGe,SAASA,EAAT,GAAyC,IAAbC,EAAY,EAAZA,SACjCC,EAAiB,SAACC,GACpB,IAAMC,EAAOC,EAAMF,GACnBF,EAASG,IAGPC,EAAQ,GACdC,EAAaC,cAAcC,SACvB,gBAAGC,EAAH,EAAGA,KAAML,EAAT,EAASA,KAAT,OAAqBC,EAAMI,GAAQL,KAGvC,IAAMM,EAAmBJ,EAAaC,cACjCI,KAAI,qBAAGF,QACPG,OACAD,KAAI,SAACF,GACF,OACI,wBAAmBI,MAAOJ,EAA1B,SACKA,GADQA,MAMzB,OACI,yBACIK,UAAU,WACVb,SAAU,SAACc,GAAD,OAAOb,EAAea,EAAEC,OAAOH,QAF7C,UAII,yCACCH,KC3BE,SAASO,IACpB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4BJ,mBAAS,MAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAqBA,OACI,sBAAKZ,UAAU,MAAf,UACI,oDACA,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAf,kBACA,cAACd,EAAD,CAAkBC,SAAUqB,IAC5B,uBACIrB,SAAU,gBA3BPY,EA2BUG,EAAH,EAAGA,OAAH,OA3BPH,EA2BqCG,EAAOH,MA1B3Dc,MAAMC,OAAOf,IAASa,EAAa,yBACnBA,EAAXb,EAAQ,EAAgB,wBACf,SAClBO,EAAiBP,EAAMgB,MAAM,EAAG,KAwBhBhB,MAAOM,EACPW,KAAK,SAET,mBAAGhB,UAAU,QAAb,SAAsBW,OAE1B,sBAAKX,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAf,gBACA,cAACd,EAAD,CAAkBC,SAAUuB,IAC5B,uBAAOX,MA7BJ,WACf,IAAMkB,EAAUZ,EAAgBE,EAAYE,EAC5C,OACII,MAAMI,IACNA,KAAYC,KACZD,IAAWC,KACXD,IAAWE,KAAKC,IAAIH,GAEb,GACJA,EAAOI,QAAQ,GAoBIC,GAAcN,KAAK,OAAOO,UAAQ,aC3CpEC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.109adf55.chunk.js","sourcesContent":["import React from 'react';\r\nimport exchangeData from '../data/exchangeData.json';\r\n\r\nexport default function CurrencyDropdown({ onChange }) {\r\n    const onSelectChange = (currency) => {\r\n        const rate = pairs[currency];\r\n        onChange(rate);\r\n    };\r\n\r\n    const pairs = {};\r\n    exchangeData.exchangeRates.forEach(\r\n        ({ code, rate }) => (pairs[code] = rate)\r\n    );\r\n\r\n    const sortedCurrencies = exchangeData.exchangeRates\r\n        .map(({ code }) => code)\r\n        .sort()\r\n        .map((code) => {\r\n            return (\r\n                <option key={code} value={code}>\r\n                    {code}\r\n                </option>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <select\r\n            className=\"currency\"\r\n            onChange={(e) => onSelectChange(e.target.value)}\r\n        >\r\n            <option>---</option>\r\n            {sortedCurrencies}\r\n        </select>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport CurrencyDropdown from './components/CurrencyDropdown';\r\n\r\nexport default function App() {\r\n    const [moneyQuantity, setMoneyQuantity] = useState('');\r\n    const [rateFrom, setRateFrom] = useState(null);\r\n    const [rateTo, setRateTo] = useState(null);\r\n    const [errorText, setErrorText] = useState('');\r\n\r\n    const onInputChange = (value) => {\r\n        if (isNaN(Number(value))) setErrorText('â›” enter a number');\r\n        else if (value < 0) setErrorText('only positive numbers');\r\n        else setErrorText('');\r\n        setMoneyQuantity(value.slice(0, 6));\r\n    };\r\n\r\n    const calcResult = () => {\r\n        const result = (moneyQuantity * rateFrom) / rateTo;\r\n        if (\r\n            isNaN(result) ||\r\n            result === -Infinity ||\r\n            result === Infinity ||\r\n            result !== Math.abs(result)\r\n        )\r\n            return '';\r\n        return result.toFixed(2);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Currency Converter</h1>\r\n            <div className=\"input-box\">\r\n                <div className=\"box-left\">\r\n                    <div className=\"text\">from</div>\r\n                    <CurrencyDropdown onChange={setRateFrom} />\r\n                    <input\r\n                        onChange={({ target }) => onInputChange(target.value)}\r\n                        value={moneyQuantity}\r\n                        type=\"text\"\r\n                    />\r\n                    <p className=\"error\">{errorText}</p>\r\n                </div>\r\n                <div className=\"box-right\">\r\n                    <div className=\"text\">to</div>\r\n                    <CurrencyDropdown onChange={setRateTo} />\r\n                    <input value={calcResult()} type=\"text\" disabled />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}